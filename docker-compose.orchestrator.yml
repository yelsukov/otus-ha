version: '2.4'

services:

  master_db:
    image: mysql:8.0.22
    container_name: "master_db"
    hostname: "master_db"
    restart: always
    volumes:
      #      - /var/data/mysql/master:/var/lib/mysql
      - ./deployment/cluster/mysql/master.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${MASTER_USER}"
      MYSQL_ROOT_PASSWORD: "${MASTER_PASSWORD}"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_ROOT_PASSWORD
      interval: 1s
      timeout: 5s
      retries: 30
    ports:
      - 3336:3306
    networks:
      - hw

  slave1_db:
    image: mysql:8.0.22
    container_name: "slave1_db"
    hostname: "slave1_db"
    restart: always
    volumes:
      #      - /var/data/mysql/slave2:/var/lib/mysql
      - ./deployment/cluster/mysql/slave2.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_USER: "${SLAVE_USER}"
      MYSQL_ROOT_PASSWORD: "${SLAVE_PASSWORD}"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_ROOT_PASSWORD
      interval: 1s
      timeout: 5s
      retries: 30
    ports:
      - 3337:3306
    depends_on:
      master_db:
        condition: service_healthy
    networks:
      - hw

  slave2_db:
    image: mysql:8.0.22
    container_name: "slave2_db"
    hostname: "slave2_db"
    restart: always
    volumes:
      #      - /var/data/mysql/slave2:/var/lib/mysql
      - ./deployment/cluster/mysql/slave2.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_USER: "${SLAVE_USER}"
      MYSQL_ROOT_PASSWORD: "${SLAVE_PASSWORD}"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_ROOT_PASSWORD
      interval: 1s
      timeout: 5s
      retries: 30
    ports:
      - 3338:3306
    depends_on:
      master_db:
        condition: service_healthy
    networks:
      - hw

  slave3_db:
    image: mysql:8.0.22
    container_name: "slave3_db"
    hostname: "slave3_db"
    restart: always
    volumes:
      #      - /var/data/mysql/slave2:/var/lib/mysql
      - ./deployment/cluster/mysql/slave3.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_USER: "${SLAVE_USER}"
      MYSQL_ROOT_PASSWORD: "${SLAVE_PASSWORD}"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_ROOT_PASSWORD
      interval: 1s
      timeout: 5s
      retries: 30
    ports:
      - 3339:3306
    depends_on:
      master_db:
        condition: service_healthy
    networks:
      - hw

  proxysql:
    container_name: "proxysql"
    build: ./deployment/proxysql
    restart: always
    healthcheck:
      test: mysqladmin ping --host=127.0.0.1 -P 6032 -ustats --password=stats
      interval: 1s
      timeout: 5s
      retries: 30
    ports:
      - 16033:6033
      - 16032:6032
    #    volumes:
    #      - /var/data/proxysql:/var/lib/proxysql
    depends_on:
      master_db:
        condition: service_healthy
      slave1_db:
        condition: service_healthy
      slave2_db:
        condition: service_healthy
      slave3_db:
        condition: service_healthy
    networks:
      - hw

  firestarter:
    container_name: "clusterator"
    build: ./deployment/cluster
    env_file:
      - .env
    depends_on:
      proxysql:
        condition: service_healthy
    command: bash setupCluster.sh
    networks:
      - hw

  backend:
    container_name: "backend"
    build: ./backend
    restart: always
    ports:
      - 8007:8080
    environment:
      JWT_SECRET: "${JWT_SECRET}"
      DB_HOST: "proxysql"
      DB_PORT: "6033"
      DB_USER: "${PROXY_USER}"
      DB_PASSWORD: "${PROXY_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      DEBUG: "${DEBUG}"
    depends_on:
      firestarter:
        condition: service_started
    networks:
      - hw

  orc:
    container_name: "orc"
    build: ./deployment/orchestrator/
    ports:
      - "3101:3000"
    volumes:
      - ./deployment/orchestrator/orc.conf.json:/etc/orchestrator.conf.json
    depends_on:
      firestarter:
        condition: service_started
    networks:
      - hw

networks:
  hw:
    name: hw